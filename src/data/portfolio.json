[{"slug":"beat-greenhouse","entry":{"SPDX-License-Identifier":"Apache-2.0"}},{"slug":"minds-garden","entry":{"title":"Mind’s Garden","thumbnail":{"url":"https://i.imgur.com/EBNoi6x.png","alt":"Thumbnail for the Mind’s Garden project, some majestic and colorful trees sit on a hillside, and the sky is filled with geometric star fractals."},"contents":[{"type":"paragraph","text":"Mind’s Garden is a musical exploration game and immersive audio visualizer. The game, which takes place in a garden within your mind, allows you to import any song you want to play alongside. However, the song isn’t just an accessory to the game; it is the game! The song is broken into pieces and scattered throughout your “head”, and it is your task to find them and unite the song. As you search for the pieces of the song, don’t forget to take a look at the garden around you, and watch the plants as they interact with the music that’s playing. The game is free to download and play from our itch.io page!"},{"type":"link","text":"Mind’s Garden on itch.io","url":"https://jaristotle.itch.io/minds"},{"type":"image","url":"https://i.imgur.com/k24y7BW.png","alt":"A forest scene from Mind’s Garden with trees changing color to the beat and dancing to the music."},{"type":"image","url":"https://i.imgur.com/6Z1CpTq.png","alt":"A lush but potentially hostile jungle scene from the Mind’s Garden game. Enjoy the music, but watch out for the carnivorous plants!"},{"type":"image","url":"https://i.imgur.com/ch5ADL2.png","alt":"A desert scene found in the Mind’s Garden game. The various cacti of different sizes and shapes jump and dance to the music."},{"type":"image","url":"https://i.imgur.com/Gv2waD3.png","alt":"An ocean scene found in the Mind’s Garden game. The ground is filled with coral and fish fly through the water around and above you."},{"type":"video","url":"https://www.youtube.com/embed/8VasHc0pNV0"},{"type":"subheading","text":"Process"},{"type":"paragraph","text":"I created Mind’s Garden with two of my classmates from the ATLAS Institute at CU Boulder. Jared Myers, Kara Metcalfe, and it was our undergraduate capstone project. We were given a 12 week long creation phase during the semester, and kept a weekly development blog the whole time! That development blog, or process log, can be found over on our GitHub repository for the project, which also contains all of the source code too!"},{"type":"link","text":"Mind’s Garden on GitHub","url":"https://github.com/peterrosenthal/minds-garden/tree/master/Process"},{"type":"paragraph","text":"Kara focused mostly on creating all of the visual assets for the game like 3D models and shaders. Jared was the gameplay programmer, coding things such as the asset and objective placement around the map. For my part: I did a lot of programming too, but I focused more on the systems programming. I created things such as the game’s procedural terrain generation algorithm, as well as systems to manage all of our 800+ different colors and determine how those colors interacted with  songs. I was also responsible for creating the different builds of the game for different operating systems as I had the most access and experience with multiple operating systems other than Microsoft Windows. And to give my artistic skills a test, I designed and drew our logo for the game."},{"type":"image","url":"https://i.imgur.com/8wQw3sA.png","alt":"The logo which I crafted for the Mind’s Garden game!"},{"type":"paragraph","text":"One of my main goals throughout the project was to always code with my teammates in mind. That meant that instead of just designing and developing “my parts” of the game, I’d create and share tools with my teammates so they could give direct hands-on input on my designs. For example, I didn’t just create a piece of procedurally generated terrain, I created a tool to create a piece of procedurally generated terrain, and opened it up to my entire team to work together on designing the ground the player walks on. If you want to read more about all the million other small things we created for the game, check out our complete weekly development blog!"},{"type":"image","url":"https://i.imgur.com/S8cJOla.png","alt":"A shot of the Mind’s Garden game during development."},{"type":"subheading","text":"Tools"},{"type":"list","entries":["The Unity Game engine","C# programming language with the JetBrains Rider IDE","Spleeter source stems separation library","GNU Image Manipulation Program"]},{"type":"subheading","text":"Reception"},{"type":"paragraph","text":"Unfortunately due to the COVID-19 pandemic starting right as we were graduating, we never got the opportunity to show off our capstone project in person. We were able to show people over zoom though, and send people the link to download the game themselves, and despite the lack of in person experience, most people were still super excited about our concept and really enjoyed exploring our interactive garden world. We had enough different color schemes to choose from that there was something for everybody to love there too. And our simple controls made the game super easy to give to people of all ages; kids absolutely loved our game. However, our 12 week development time felt very cramped for such an ambitious project, and we didn’t get the chance to iron out every single bug. So while most people are able to play the game without ever encountering a bug, we’ve gotten too many reports of people not even being able to make it past the main menu to consider the game “bug free.” Even though the capstone project is long finished, I still hope to one day come back though and squash those last few remaining bugs."}]}},{"slug":"gosutoraito","entry":{"title":"Gosutoraito","thumbnail":{"url":"https://i.imgur.com/KFvPlNM.jpg","alt":"Thumbnail for the Gosutoraito project, shows a small wooden temple in a snowy hillside."},"contents":[{"type":"paragraph","text":"Gosutoraito is a first person atmospheric puzzle game set in a ghostly temple. The game is supposed to symbolically represent a samurai’s transition to the afterlife, encountering different ghosts of his past in each level. Every puzzle in the game is based on the same mechanic of guiding a beam of light from room to room, reflecting it around corners with mirrors that the player rotates. As the levels get harder, more complicated mechanics such as splitting the light beam in two are introduced. Download the game for free from our itch.io page for it!"},{"type":"link","url":"https://karasel.itch.io/gosutoraito","text":"Gosutoraito on itch.io"},{"type":"image","url":"https://i.imgur.com/hB3oT9l.jpg","alt":"At the start of the game, a small wooden temple sits in a snowy forest."},{"type":"subheading","text":"Process"},{"type":"paragraph","text":"For my final project in the class ATLS 4140 - Game Development, I teamed up with two of my classmates, Jared Myers and Kara Metcalfe, to create Gosutoraito. The game was created over the course of 6-8 weeks, which is not much time, and yet it was the biggest project and longest any of us had dedicated yet to working on a video game at the time. Kara worked on most of the visual assets of the game, like 3D models and environmental effects, and Jared did all of the level design and any coding/development that went with that. I wanted to work on my skills in both areas. Most of my time working on this project was dedicated to programming things such as our unique player controls and our reflection math, but I also spent some time creating a 3D model of a ghost and improving small graphical things in the game, like the look of the light beam, something central to every level."},{"type":"image","url":"https://i.imgur.com/J4L9Jub.jpg","alt":"A beam of light shines down from the ceiling of the temple into the puzzles."},{"type":"image","url":"https://i.imgur.com/Xdmj1fN.jpg","alt":"The beam of light is reflected throughout the puzzle on mirrors."},{"type":"paragraph","text":"My team created a process blog for this project that you can read on the project’s GitHub repository for more insight into our design and development process for the game!"},{"type":"link","url":"https://github.com/peterrosenthal/gosutoraito/tree/master/process","text":"Gosutoratio on GitHub"},{"type":"subheading","text":"Tools"},{"type":"list","entries":["The Unity Game Engine","C# and JetBrains Rider","Autodesk Maya","Adobe Photoshop"]},{"type":"subheading","text":"Reception"},{"type":"paragraph","text":"“That’s kind of racist.” -Zhenghua Yang, Founder and CEO of Serenity Forge"},{"type":"paragraph","text":"He was referring specifically to the hat we put on one of the ghosts to indicate that they were a farmer before being trapped in the afterlife. We went through after the final presentation to remove that hat, but upon further reflection, those words really do go beyond just a hat. We were 3 white kids trying to make a game with heavy Eastern spiritual themes. The name was literally just Google Translate to Japanese for “ghost light,” and none of us really had enough cultural knowledge to make anything else about the game legitimate, so the spiritual themes were pretty much just whatever we wanted. And that… that’s kind of racist."},{"type":"image","url":"https://i.imgur.com/0xTAhJ0.jpg","alt":"Two ghosts chase the player down as they try to solve the puzzles. One of the ghosts is wearing a farmer’s hat."},{"type":"paragraph","text":"Other than the cultural problems of the game, it turned out technically awesome. The game had a good learning and difficulty curve, and the final few levels were surprisingly more challenging than any of us had anticipated. The light reflection mechanic turned out to be an inspiration in the master’s thesis project of Maria Deslis, a fellow ATLAS student at the time. That project, Eternal Eclipse, also borrowed the control scheme I developed, since as a team we decided to open source our game!"}]}},{"slug":"tropical-cyclones","entry":{"title":"Tilted Tropical Cyclones","thumbnail":{"url":"https://i.imgur.com/a1YPK6G.png","alt":"An overhead view of the clouds from a simulated hurricane."},"contents":[{"type":"paragraph","text":"In the summer of 2019, I had the incredible opportunity to work with researcher David Schecter at NorthWest Research Associates. We were investigating how different factors affect the development time from a tropical cyclone to a hurricane, primarily the tilt factor of the hurricane. In tropical cyclone terms, tilt is simply just the horizontal difference between the center of the cyclone at the bottom and the center of the cyclone at its top. As part of this research, I got to run the code on a supercomputer many orders of magnitude more powerful than my own computer, which I found particularly exciting."},{"type":"image","url":"https://i.imgur.com/4irMJ9U.png","alt":"An overhead view of the clouds from a simulated hurricane."},{"type":"subheading","text":"3D Visualization"},{"type":"paragraph","text":"Over the course of the summer, I ran dozens of simulations and collected 10TB of data. I prepared it all for standard analysis, but was also given the freedom to experiment and explore my own interests and their intersections with this work. I’m a creative technologist, not an atmospheric scientist, and as fun as it was to collect 10TB of data, all of it was just ones and zeros. We graphed the data, but you needed to read at least the first 5 chapters of any atmospheric science textbook before properly understanding any of the 2 dimensional graphs that are standard to include in a research paper of that type. Not many people outside of atmospheric sciences have read the first 5 chapters of an atmospheric science textbook, so I was disappointed with how hard it was to share the work I was doing with everyone else I knew."},{"type":"image","url":"https://i.imgur.com/6sJ0Qjr.png","alt":"An isosurface shows the “tilt”: horizontal separation of the cyclone on top vs. bottom."},{"type":"paragraph","text":"Early on in the research, I came across Leigh Orf’s research on tornadoes that was done using CM1, the same numerical model we were using to run our simulations. These tornadoes were particularly interesting to me not only due to the shared model, but because Leigh Orf collaborated with David Bock to create physically based renderings of the tornado. Those 3D renderings were incredible because they just showed the clouds that would be there if the simulated tornado was real. There was absolutely no prerequisite need for atmospheric science knowledge to read them; it passed the eyeball test and looks like a tornado to everybody."},{"type":"link","text":"Leigh Orf and David Bock’s tornado simulations and renders","url":"http://lantern.ncsa.illinois.edu/Vis/XSEDE/XSEDE15/Bock_Leigh.mov"},{"type":"paragraph","text":"I wanted to replicate this eyeball testability of the data by creating 3D cloud renderings of my own with the data I was creating. After trying out several different rendering and visualization softwares, I settled on Mayavi2 by EnThought. It is both a visualization program written in Python and a visualization library written for Python, which enabled me to easily integrate it into our already existing data analysis/visualization workflow that consisted mainly of Python and Jupyter notebooks. In addition to rendering videos and stills of the clouds in our hurricanes like I was originally inspired to do, I also experimented with creatively visualizing different scientific qualities of the simulation, like the vorticity, or how much the wind was turning direction at each point. Check out the renderings in the pictures accompanying this post!"},{"type":"image","url":"https://i.imgur.com/jVDQ6Wl.png","alt":"A birds eye view shows the clouds from a simulated hurricane at an angle, and the ground is painted with the wind speeds at the location."},{"type":"image","url":"https://i.imgur.com/KtPW4Gp.png","alt":"A side-on view of the simulated hurricane. Using a combination of isosurfaces and volume rendering of the vertical vorticity, the powerful “eye” of a fully developed hurricane is visualized as well as smaller vortical dipoles."},{"type":"subheading","text":"Animated Explainer Video"},{"type":"paragraph","text":"Real-life hurricanes are often not perfectly aligned from top to bottom, usually caused by factors such as wind blowing in different directions at different altitudes (this is pretty much always happening in the air above you to some extent). This not-perfect alignment is what we called the hurricane’s tilt. It’s not too complicated of an idea, but whenever someone asked what I was working on, and I replied, “tilted tropical cyclones,” I would always be met with blank stares and “umm, what?”s. So for my final project in ATLS 3110 - Motion, an animation design class, I created an explainer video dedicated to answering the question “what is a tilted tropical cyclone?”"},{"type":"paragraph","text":"The explainer video was scripted and recorded by me, and animated in Adobe AfterEffects with illustrations I created in Adobe Illustrator. It was met with a lot of positive feedback that it was doing its job of explaining tilted tropical cyclones really well. I hope it can help you understand the topic better too! I originally posted it to Vimeo, but have recently moved it to YouTube in an effort to consolidate my video content from ATLAS."},{"type":"video","url":"https://www.youtube.com/embed/KQbJA5Mnc88"},{"type":"link","text":"Titled Tropical Cyclones Explained on YouTube","url":"https://www.youtube.com/watch?v=KQbJA5Mnc88"},{"type":"subheading","text":"Tools"},{"type":"list","entries":["NCAR CISL’s Cheyenne supercomputer","CM-1 cloud resolving numerical model","Python: numpy, pyplot, and Jupyter notebooks","Mayavi2 3d data visualization library","Adobe Illustrator and AfterEffects"]}]}},{"slug":"pn-barrier","entry":{"title":"Breaking the Peierls-Nabarro Energy Barrier","thumbnail":{"url":"https://i.imgur.com/PqXk3fo.png","alt":"A 3D scientific plot shows a wave traveling forward with a little bit of dispersion as time increases."},"contents":[{"type":"paragraph","text":"The first research project I worked on was in the Applied Mathematics department at CU Boulder. I worked as a research assistant with Professor Mark Ablowitz and Justin Cole when he was still a postdoctoral researcher at CU Boulder. The paper, which was submitted to Physical Review E and is currently under review, investigates how topological invariance interacts with the Peierls-Nabarro energy barrier, two forces that seem to be at odds in a topological insulator system. For the research, I modified and ran simulation code in MATLAB written by Justin Cole, managed and analyzed the data, and assisted in the writing of the paper."},{"type":"link","text":"Professor Mark Ablowitz’s website","url":"https://sites.google.com/site/ablowitz/"},{"type":"link","text":"Professor Justin Cole’s Website","url":"https://sites.google.com/view/jtcole"},{"type":"subheading","text":"3D Interactive Visualization"},{"type":"video","url":"https://www.youtube.com/embed/vcgMK3EQsik"},{"type":"paragraph","text":"During my second research position, the Tilted Tropical Cyclones project, I had the chance to explore the field of creative data visualization. For school projects I had gotten significantly comfortable with using game engines. So recently I decided to revisit the data from this project to be used in my first adventure into combining science and games."},{"type":"paragraph","text":"Just like the Tilted Tropical Cyclones visualization, I wanted the visualization to represent the actual physical experiment that we were numerically simulating, so I named this sub-project the Honey Visualizer after the honeycomb lattice structure of the experiment. In physical experiments of the type of topological insulators we’re simulating, waveguides are etched into a block of acrylic in a honeycomb pattern. These waveguides act like fiber optic cables when light is shone into them. A highly localized wave of light -- meaning very bright in one waveguide, and much much less bright in the surrounding waveguides -- is shone into one end of the acrylic block. As the wave of light travels down the block of acrylic, the center of the wave jumps up one waveguide, and then another waveguide, and it keeps moving from waveguide to waveguide in one direction only; it never stops or changes direction."},{"type":"paragraph","text":"I tried my hardest to recreate the visual look of doing that experiment in real life via the Godot game engine. I used the data we got from the simulations, and the first prototype turned out really good. I hope to have the time in the future to add more robust data-set selection and other features to the visualizer to take it beyond the prototype stage!"},{"type":"subheading","text":"Tools"},{"type":"list","entries":["MATLAB","LaTeX","Adobe Illustrator","Godot Game Engine"]}]}}]